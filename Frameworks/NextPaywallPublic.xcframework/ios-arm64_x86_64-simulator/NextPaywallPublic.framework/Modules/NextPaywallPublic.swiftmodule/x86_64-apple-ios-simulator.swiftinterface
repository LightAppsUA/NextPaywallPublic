// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name NextPaywallPublic
import AdSupport
import AppTrackingTransparency
import Combine
import Foundation
@_exported import NextPaywallPublic
import StoreKit
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class AppHelper : ObjectiveC.NSObject {
  public static let shared: NextPaywallPublic.AppHelper
  final public func application(_ application: UIKit.UIApplication, didFinishLaunchingWithOptions launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  final public func applicationDidBecomeActive(_ application: UIKit.UIApplication)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class NextPaywallPresenter {
  public static let shared: NextPaywallPublic.NextPaywallPresenter
  public var nativePaywallProvider: (() -> UIKit.UIViewController)?
  public func getPaywallVC(nativePaywallProvider: (() -> UIKit.UIViewController)? = nil, animatedDismiss: Swift.Bool = true) -> UIKit.UIViewController?
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class NextPaywallSettings {
  public static let shared: NextPaywallPublic.NextPaywallSettings
  final public func configure(secretKey: Swift.String, backgroundColor: UIKit.UIColor? = nil, persistenceProvider: any NextPaywallPublic.NextPaywallPersistenceProvider)
  @objc deinit
}
public protocol NextPaywallPersistenceProvider {
  var premiumStatus: Swift.Bool { get set }
}
@_hasMissingDesignatedInitializers public class DefaultNextPaywallPersistenceProvider : NextPaywallPublic.NextPaywallPersistenceProvider {
  public var premiumStatus: Swift.Bool {
    get
    set
  }
  @objc deinit
}
